{"version":3,"sources":["Components/Button/Buttons.js","PropValues/propTypes.js","Components/Good/Good.js","Components/Select/Select.js","Components/GoodList/GoodList.js","App.js","index.js"],"names":["Button","PropTypes","string","isRequired","shape","content","arrayOf","_ref","text","listOfGoods","onClick","react_default","a","createElement","className","btn btn-primary","btn--start","type","Good","Select","props","selectedByDefault","onChange","listToSelect","Object","toConsumableArray","map","item","length","sort","b","filter","index","arr","indexOf","value","event","key","GoodsList","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickReverse","setState","prevState","reverse","onClickSortAlphabetically","onClickSortByLength","onClickSelect","target","Number","onClickReset","state","_this$state","Button_Buttons","Components_Select_Select","good","Components_Good_Good","Component","goodsFromServer","App","isStarted","handleStart","concat","GoodList_GoodList","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.28260e86.chunk.js","sourcesContent":["import React from 'react';\nimport { ButtonProps } from '../../PropValues/propTypes';\nimport './Buttons.css';\n\nconst Button = ({ text, listOfGoods, onClick }) => {\n  const btn = () => ({\n    'btn btn-primary': true,\n    'btn--start': text === 'Start',\n  });\n\n  return (\n    <button\n      className={btn}\n      type=\"button\"\n      onClick={() => onClick(listOfGoods)}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.propTypes = ButtonProps;\nexport default Button;\n","import PropTypes from 'prop-types';\n\nexport const ButtonProps = {\n  text: PropTypes.string.isRequired,\n};\n\nexport const GoodProps = {\n  good: PropTypes.shape({\n    content: PropTypes.string,\n  }),\n};\n\nexport const GoodsListProps = {\n  goodsFromServer: PropTypes.arrayOf(\n    PropTypes.shape({\n      content: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport const SelectProps = {\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { GoodProps } from 'prop-types';\nimport './Good.css';\n\nconst Good = ({ content }) => (\n  <li className=\"goods-list__item list-group-item\">{content}</li>\n);\n\nGood.propTypes = GoodProps;\nexport default Good;\n","import React from 'react';\nimport './Select.css';\nimport { SelectProps } from 'prop-types';\n\nconst Select = (props) => {\n  const { listOfGoods, selectedByDefault, onChange } = props;\n\n  const listToSelect = [...listOfGoods]\n    .map(item => item.length)\n    .sort((a, b) => a - b)\n    .filter((item, index, arr) => index === arr.indexOf(item));\n\n  return (\n    <div className=\"select-container\">\n      <h2>Select:</h2>\n      <select\n        className=\"goods-select form-control\"\n        value={selectedByDefault}\n        onChange={event => onChange(event)}\n      >\n        <option value={0} />\n        {listToSelect.map(item => (\n          <option\n            value={item}\n            key={item}\n          >\n            {item}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nSelect.propTypes = SelectProps;\nexport default Select;\n","import React, { Component } from 'react';\nimport { GoodsListProps } from 'prop-types';\nimport Button from '../Button/Buttons';\nimport Good from '../Good/Good';\nimport Select from '../Select/Select';\n\nimport './GoodList.css';\n\nclass GoodsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listOfGoods: [...this.props.listOfGoods],\n      selectedByDefault: 1,\n    };\n  }\n\n  onClickReverse = () => {\n    this.setState(prevState => ({\n      listOfGoods: [...prevState.listOfGoods].reverse(),\n    }));\n  };\n\n  onClickSortAlphabetically = () => {\n    this.setState(prevState => ({\n      listOfGoods: [...prevState.listOfGoods].sort(),\n    }));\n  };\n\n  onClickSortByLength = () => {\n    this.setState(prevState => ({\n      listOfGoods: [...prevState.listOfGoods]\n        .sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  onClickSelect = (event) => {\n    this.setState({\n      selectedByDefault: event.target.value,\n      listOfGoods: [...this.props.listOfGoods]\n        .filter(item => item.length === Number(event.target.value)),\n    });\n  };\n\n  onClickReset = () => {\n    this.setState({\n      listOfGoods: [...this.props.listOfGoods],\n      selectedByDefault: 0,\n    });\n  };\n\n  render() {\n    const { listOfGoods, selectedByDefault } = this.state;\n\n    const {\n      onClickReverse,\n      onClickSortAlphabetically,\n      onClickSortByLength,\n      onClickReset,\n      onClickSelect,\n    } = this;\n\n    return (\n      <div className=\"content-container\">\n        <div className=\"buttons-container\">\n          <Button\n            text=\"reverse\"\n            onClick={onClickReverse}\n            listOfGoods={listOfGoods}\n          />\n          <Button\n            text=\"Sort alphabetically\"\n            onClick={onClickSortAlphabetically}\n            listOfGoods={listOfGoods}\n          />\n          <Button\n            text=\"Sort by length\"\n            onClick={onClickSortByLength}\n            listOfGoods={listOfGoods}\n          />\n          <Button\n            text=\"reset\"\n            onClick={onClickReset}\n            listOfGoods={listOfGoods}\n          />\n        </div>\n\n        <div className=\"select-list\">\n          <Select\n            listOfGoods={listOfGoods}\n            selectedByDefault={selectedByDefault}\n            onChange={onClickSelect}\n          />\n        </div>\n\n        <ul className=\"goods-list list-group\">\n          {listOfGoods.map(good => (\n            <Good\n              key={good}\n              content={good}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = GoodsListProps;\nexport default GoodsList;\n","import React, { Component } from 'react';\nimport Buttons from './Components/Button/Buttons';\nimport GoodsList from './Components/GoodList/GoodList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends Component {\n  state = {\n    isStarted: true,\n  };\n\n  handleStart = () => {\n    this.setState({\n      isStarted: false,\n    });\n  };\n\n  render() {\n    const listOfGoods = [...goodsFromServer];\n    const { handleStart } = this;\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          {isStarted\n            ? (\n              <Buttons\n                className=\"btn--start\"\n                text=\"Start\"\n                onClick={handleStart}\n              />\n            )\n            : <GoodsList listOfGoods={listOfGoods} />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}