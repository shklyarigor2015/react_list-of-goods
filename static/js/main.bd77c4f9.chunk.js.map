{"version":3,"sources":["Components/Buttons/Buttons.js","PropValues/propTypes.js","Components/Good/Good.js","Components/Select/Select.js","Components/GoodList/GoodList.js","App.js","index.js"],"names":["Buttons","PropTypes","string","isRequired","shape","content","arrayOf","_ref","text","listOfGoods","onClick","react_default","a","createElement","className","type","Good","Select","props","selectedByDefault","onChange","value","event","GoodsList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickReverse","setState","prevState","toConsumableArray","reverse","onClickSortAlphabetically","sort","onClickSortByLength","b","length","onClickSelect","target","filter","item","Number","onClickReset","state","_this$state","Components_Buttons_Buttons","Components_Select_Select","map","good","Components_Good_Good","key","Component","goodsFromServer","App","isStarted","handleStart","concat","GoodList_GoodList","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"6SAsBeA,GCnBPC,IAAUC,OAAOC,WAIjBF,IAAUG,MAAM,CACpBC,QAASJ,IAAUC,SAKJD,IAAUK,QACzBL,IAAUG,MAAM,CACdC,QAASJ,IAAUC,SAClBC,YACHA,iBDbY,SAAAI,GAAoC,IAAjCC,EAAiCD,EAAjCC,KAAMC,EAA2BF,EAA3BE,YAAaC,EAAcH,EAAdG,QAKpC,OACEC,EAAAC,EAAAC,cAAA,UACEC,UANQ,iBAAO,CACjBN,KAAM,UAMJO,KAAK,SACLL,QAAS,kBAAMA,EAAQD,KAEtBD,YELQQ,SANF,SAAAT,GAAA,IAAGF,EAAHE,EAAGF,QAAH,OACXM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oCAAoCT,KC0BrCY,SA3BA,SAACC,GAAU,IAChBC,EAAgCD,EAAhCC,kBAAmBC,EAAaF,EAAbE,SAE3B,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACVO,MAAOF,EACPC,SAAU,SAAAE,GAAK,OAAIF,EAASE,KAE5BX,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,KAAd,KACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,MAAd,UCwFOE,qBAvGb,SAAAA,EAAYL,GAAO,IAAAM,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMT,KAQRa,eAAiB,WACfP,EAAKQ,SAAS,SAAAC,GAAS,MAAK,CAC1BxB,YAAagB,OAAAS,EAAA,EAAAT,CAAIQ,EAAUxB,aAAa0B,cAXzBX,EAenBY,0BAA4B,WAC1BZ,EAAKQ,SAAS,SAAAC,GAAS,MAAK,CAC1BxB,YAAagB,OAAAS,EAAA,EAAAT,CAAIQ,EAAUxB,aAAa4B,WAjBzBb,EAqBnBc,oBAAsB,WACpBd,EAAKQ,SAAS,SAAAC,GAAS,MAAK,CAC1BxB,YAAagB,OAAAS,EAAA,EAAAT,CAAIQ,EAAUxB,aACxB4B,KAAK,SAACzB,EAAG2B,GAAJ,OAAU3B,EAAE4B,OAASD,EAAEC,aAxBhBhB,EA4BnBiB,cAAgB,SAACnB,GACfE,EAAKQ,SAAS,CACZb,kBAAmBG,EAAMoB,OAAOrB,MAChCZ,YAAagB,OAAAS,EAAA,EAAAT,CAAID,EAAKN,MAAMT,aACzBkC,OAAO,SAAAC,GAAI,OAAIA,EAAKJ,SAAWK,OAAOvB,EAAMoB,OAAOrB,YAhCvCG,EAoCnBsB,aAAe,WACbtB,EAAKQ,SAAS,CACZvB,YAAYgB,OAAAS,EAAA,EAAAT,CAAKD,EAAKN,MAAMT,aAC5BU,kBAAmB,KApCrBK,EAAKuB,MAAQ,CACXtC,YAAYgB,OAAAS,EAAA,EAAAT,CAAKD,EAAKN,MAAMT,aAC5BU,kBAAmB,GALJK,wEA2CV,IAAAwB,EACoCrB,KAAKoB,MAAxCtC,EADDuC,EACCvC,YAAaU,EADd6B,EACc7B,kBAGnBY,EAKEJ,KALFI,eACAK,EAIET,KAJFS,0BACAE,EAGEX,KAHFW,oBACAQ,EAEEnB,KAFFmB,aACAL,EACEd,KADFc,cAGF,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACoC,EAAD,CACEzC,KAAK,UACLE,QAASqB,EACTtB,YAAaA,IAEfE,EAAAC,EAAAC,cAACoC,EAAD,CACEzC,KAAK,sBACLE,QAAS0B,EACT3B,YAAaA,IAEfE,EAAAC,EAAAC,cAACoC,EAAD,CACEzC,KAAK,iBACLE,QAAS4B,EACT7B,YAAaA,IAEfE,EAAAC,EAAAC,cAACoC,EAAD,CACEzC,KAAK,QACLE,QAASoC,EACTrC,YAAaA,EACbU,kBAAmBA,KAIvBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACqC,EAAD,CACEzC,YAAaA,EACbU,kBAAmBA,EACnBC,SAAUqB,KAId9B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACXL,EAAY0C,IAAI,SAAAC,GAAI,OACnBzC,EAAAC,EAAAC,cAACwC,EAAD,CACEC,IAAKF,EACL/C,QAAS+C,eA7FCG,cCJlBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsCaC,6MAlCbV,MAAQ,CACNW,WAAW,KAGbC,YAAc,WACZnC,EAAKQ,SAAS,CACZ0B,WAAW,6EAKb,IAAMjD,EAAW,GAAAmD,OAAOJ,GAChBG,EAAgBhC,KAAhBgC,YACAD,EAAc/B,KAAKoB,MAAnBW,UAER,OACE/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZ4C,EAEG/C,EAAAC,EAAAC,cAACoC,EAAD,CACEnC,UAAU,MACVN,KAAK,QACLE,QAASiD,IAGXhD,EAAAC,EAAAC,cAACgD,EAAD,CAAWpD,YAAaA,aA3BpB8C,aCZlBO,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,CAAKC,KAAM,MAASC,SAASC,eAAe","file":"static/js/main.bd77c4f9.chunk.js","sourcesContent":["import React from 'react';\nimport { ButtonProps } from '../../PropValues/propTypes';\nimport './Buttons.css';\n\nconst Buttons = ({ text, listOfGoods, onClick }) => {\n  const btn = () => ({\n    text: 'Start',\n  });\n\n  return (\n    <button\n      className={btn}\n      type=\"button\"\n      onClick={() => onClick(listOfGoods)}\n    >\n      {text}\n    </button>\n  );\n};\n\nButtons.propTypes = ButtonProps;\n\nexport default Buttons;\n","import PropTypes from 'prop-types';\n\nexport const ButtonProps = {\n  text: PropTypes.string.isRequired,\n};\n\nexport const GoodProps = {\n  good: PropTypes.shape({\n    content: PropTypes.string,\n  }),\n};\n\nexport const GoodsListProps = {\n  goodsFromServer: PropTypes.arrayOf(\n    PropTypes.shape({\n      content: PropTypes.string,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport { GoodProps } from 'prop-types';\nimport './Good.css';\n\nconst Good = ({ content }) => (\n  <li className=\"goods-list__item list-group-item\">{content}</li>\n);\n\nGood.propTypes = GoodProps;\n\nexport default Good;\n","import React from 'react';\nimport './Select.css';\nimport { SelectProps } from 'prop-types';\n\nconst Select = (props) => {\n  const { selectedByDefault, onChange } = props;\n\n  return (\n    <div className=\"select-container\">\n      <h2>Select:</h2>\n      <select\n        className=\"goods-select\"\n        value={selectedByDefault}\n        onChange={event => onChange(event)}\n      >\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n      </select>\n    </div>\n  );\n};\n\nSelect.propTypes = SelectProps;\nexport default Select;\n","import React, { Component } from 'react';\nimport { GoodsListProps } from 'prop-types';\nimport Button from '../Buttons/Buttons';\nimport Good from '../Good/Good';\nimport Select from '../Select/Select';\n\nimport './GoodList.css';\n\nclass GoodsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      listOfGoods: [...this.props.listOfGoods],\n      selectedByDefault: 1,\n    };\n  }\n\n  onClickReverse = () => {\n    this.setState(prevState => ({\n      listOfGoods: [...prevState.listOfGoods].reverse(),\n    }));\n  };\n\n  onClickSortAlphabetically = () => {\n    this.setState(prevState => ({\n      listOfGoods: [...prevState.listOfGoods].sort(),\n    }));\n  };\n\n  onClickSortByLength = () => {\n    this.setState(prevState => ({\n      listOfGoods: [...prevState.listOfGoods]\n        .sort((a, b) => a.length - b.length),\n    }));\n  };\n\n  onClickSelect = (event) => {\n    this.setState({\n      selectedByDefault: event.target.value,\n      listOfGoods: [...this.props.listOfGoods]\n        .filter(item => item.length === Number(event.target.value)),\n    });\n  };\n\n  onClickReset = () => {\n    this.setState({\n      listOfGoods: [...this.props.listOfGoods],\n      selectedByDefault: 0,\n    });\n  };\n\n  render() {\n    const { listOfGoods, selectedByDefault } = this.state;\n\n    const {\n      onClickReverse,\n      onClickSortAlphabetically,\n      onClickSortByLength,\n      onClickReset,\n      onClickSelect,\n    } = this;\n\n    return (\n      <div className=\"content-container\">\n        <div className=\"buttons-container\">\n          <Button\n            text=\"reverse\"\n            onClick={onClickReverse}\n            listOfGoods={listOfGoods}\n          />\n          <Button\n            text=\"Sort alphabetically\"\n            onClick={onClickSortAlphabetically}\n            listOfGoods={listOfGoods}\n          />\n          <Button\n            text=\"Sort by length\"\n            onClick={onClickSortByLength}\n            listOfGoods={listOfGoods}\n          />\n          <Button\n            text=\"reset\"\n            onClick={onClickReset}\n            listOfGoods={listOfGoods}\n            selectedByDefault={selectedByDefault}\n          />\n        </div>\n\n        <div className=\"select-list\">\n          <Select\n            listOfGoods={listOfGoods}\n            selectedByDefault={selectedByDefault}\n            onChange={onClickSelect}\n          />\n        </div>\n\n        <ul className=\"goods-list list-group\">\n          {listOfGoods.map(good => (\n            <Good\n              key={good}\n              content={good}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nGoodsList.propTypes = GoodsListProps;\n\nexport default GoodsList;\n","import React, { Component } from 'react';\nimport Buttons from './Components/Buttons/Buttons';\nimport GoodsList from './Components/GoodList/GoodList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends Component {\n  state = {\n    isStarted: true,\n  };\n\n  handleStart = () => {\n    this.setState({\n      isStarted: false,\n    });\n  };\n\n  render() {\n    const listOfGoods = [...goodsFromServer];\n    const { handleStart } = this;\n    const { isStarted } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          {isStarted\n            ? (\n              <Buttons\n                className=\"btn\"\n                text=\"Start\"\n                onClick={handleStart}\n              />\n            )\n            : <GoodsList listOfGoods={listOfGoods} />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}